name: CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

jobs:
  build_documentation:
    name: "Build Documentation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - run: pip3 install -r requirements.txt
      - run: mkdocs build -d build/site/
      - name: "Upload Documentation (web)"
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.WEBSPACE_HOST }}
          user: ${{ secrets.WEBSPACE_USER }}
          password: ${{ secrets.WEBSPACE_PASSWORD }}
          localDir: "build/site/"
          remoteDir: "."
      - name: "Compress Documentation"
        if: startsWith(github.ref, 'refs/tags/v')
        run: "zip -r documentation.zip ./build/site"
      - name: "Upload Documentation (artifact)"
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v1.0.0
        with:
          name: "Documentation"
          path: "documentation.zip"
  build_frontend:
    name: "Build Frontend"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: 12
      - name: Install Packages
        run: npm i
        working-directory: frontend
      - name: Build Production Frontend
        run: npm run build-prod
        working-directory: frontend
      - name: Upload Frontend
        uses: actions/upload-artifact@v1.0.0
        with:
          name: "Frontend"
          path: "frontend/dist/raydio/"
  build_jar:
    name: "Build Jar Archive"
    runs-on: ubuntu-latest
    needs: [ build_frontend ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '11'
      - uses: actions/download-artifact@v2
        with:
          name: "Frontend"
          path: src/main/resources/static/
      - name: Build Jar Archive
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          arguments: "build -x check"
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
      - name: Jar Archive
        uses: actions/upload-artifact@v1.0.0
        with:
          name: "Jar Archive"
          path: "build/libs/"
  build_docker:
    name: "Build Docker Container"
    runs-on: ubuntu-latest
    needs: [ build_frontend ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '11'
      - uses: actions/download-artifact@v2
        with:
          name: "Frontend"
          path: src/main/resources/static/
      - name: Build Docker Container
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          arguments: "jibDockerBuild -x check"
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
  build_packages:
    name: "Build Linux Packages"
    runs-on: ubuntu-latest
    needs: [build_frontend]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '11'
      - uses: actions/download-artifact@v2
        with:
          name: "Frontend"
          path: src/main/resources/static/
      - name: "Build Packages (.deb, .rpm)"
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          arguments: "buildDeb buildRpm -x check"
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
      - name: Upload Packages
        uses: actions/upload-artifact@v1.0.0
        with:
          name: "Linux Packages"
          path: "build/distributions/"
  release:
    name: "Create Release"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
      - build_jar
      - build_docker
      - build_packages
      - build_documentation
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: "Linux Packages"
      - uses: actions/download-artifact@v2
        with:
          name: "Jar Archive"
      - uses: actions/download-artifact@v2
        with:
          name: "Documentation"
      - name: "GH Release"
        uses: softprops/action-gh-release@v0.1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            *.deb
            *.rpm
            *.jar
            *.zip
